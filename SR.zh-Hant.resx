<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>找不到名為{0}的内容。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Conversion_Failed" xml:space="preserve">
    <value>無法按照方法{2}. {3}的預期將類型“{0}”的值轉換為“{1}”。</value>
  </data>
  <data name="RangeAttribute_MinGreaterThanMax" xml:space="preserve">
    <value>最大值“{0}”必須大於或等於最小值“{1}”。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Must_Be_Public" xml:space="preserve">
    <value>自定義驗證類型“{0}”必須是公共的。</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}必須介於{1}和{2}之間。</value>
  </data>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>參數“{0}”不能為null、空或僅包含空格。</value>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>模式必須設定為有效的規則運算式。</value>
  </data>
  <data name="CreditCardAttribute_Invalid" xml:space="preserve">
    <value>{0}欄位不是有效的信用卡號。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNotAString" xml:space="preserve">
    <value>位置{0}處值為“{1}”的鍵參數不是字串。 每個鍵控制參數都必須是字串。</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}的長度不能超過{1}。</value>
  </data>
  <data name="LocalizableString_LocalizationFailed" xml:space="preserve">
    <value>無法檢索内容“{0}”，因為當地語系化失敗。 類型“{1}”不是公共的，或者不包含名為“{2}”的公共靜態字串内容。</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>欄位{0}的長度必須在{2}到{1}之間。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Required" xml:space="preserve">
    <value>CustomValidation.Method未指定。</value>
  </data>
  <data name="AttributeStore_Unknown_Property" xml:space="preserve">
    <value>類型“{0}”不包含名為“{1}”的公共内容。</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}必須是最大長度為“{1}”的字串或數組類型。</value>
  </data>
  <data name="Validator_Property_Value_Wrong_Type" xml:space="preserve">
    <value>内容“{0}”的值必須為“{1}”類型。</value>
  </data>
  <data name="LengthAttribute_InvalidValueType" xml:space="preserve">
    <value>類型為{0}的欄位必須是字串、數組或ICollection類型。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Not_Found" xml:space="preserve">
    <value>CustomValidationAttribute方法“{0}”在類型“{1}”中不存在，或者不是公共和靜態的。</value>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>{0}欄位不是有效的電話號碼。</value>
  </data>
  <data name="UrlAttribute_Invalid" xml:space="preserve">
    <value>{0}欄位不是有效的完全限定的http、 https、ftp URL。</value>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}無效。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>類型“{0}”需要表示枚舉類型。</value>
  </data>
  <data name="RangeAttribute_ArbitraryTypeNotIComparable" xml:space="preserve">
    <value>類型{0}必須實現{1}。</value>
  </data>
  <data name="FileExtensionsAttribute_Invalid" xml:space="preserve">
    <value>{0}欄位僅接受具有以下副檔名的檔案：{1}</value>
  </data>
  <data name="ValidationAttribute_NeedBothResourceTypeAndResourceName" xml:space="preserve">
    <value>需要在此内容上設定ErrorMessageResourceType和ErrorMessageResourceName。</value>
  </data>
  <data name="Validator_InstanceMustMatchValidationContextInstance" xml:space="preserve">
    <value>提供的實例必須與提供的ValidationContext上的ObjectInstance匹配。</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}必須是最小長度為“{1}”的字串或數組類型。</value>
  </data>
  <data name="MetadataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>MetadataClassType不能為null。</value>
  </data>
  <data name="CustomValidationAttribute_ValidatorType_Required" xml:space="preserve">
    <value>CustomValidation.ValidatorType未指定。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Min_And_Max" xml:space="preserve">
    <value>必須設定最小值和最大值。</value>
  </data>
  <data name="ValidationAttribute_ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>資源類型“{0}”沒有名為“{1}”的可訪問靜態内容。</value>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute的長度值必須大於零。 使用不帶參數的MaxLength()來訓示字串或數組可以具有允許的最大長度。</value>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>找不到内容{0}. {1}。</value>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0}無效。</value>
  </data>
  <data name="StringLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>最大長度必須是非負整數。</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>欄位{0}必須與規則運算式“{1}”匹配。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>為EnumDataTypeAttribute提供的類型不能為null。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Operand_Type" xml:space="preserve">
    <value>當字串用於最小值和最大值時，必須設定OperandType。</value>
  </data>
  <data name="ValidationAttribute_ResourcePropertyNotStringType" xml:space="preserve">
    <value>資源類型“{1}”的内容“{0}”不是字串類型。</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>{0}欄位為必填項。</value>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>“{0}”和“{1}”不匹配。</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>{0}欄位不是有效的電子郵寄地址。</value>
  </data>
  <data name="AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties" xml:space="preserve">
    <value>類型“{0}”的關聯中繼資料類型包含以下未知内容或欄位：{1}。 請確保這些成員的名稱與主類型上的内容名稱匹配。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Must_Return_ValidationResult" xml:space="preserve">
    <value>類型“{1}”中的CustomValidationAttribute方法“{0}”必須返回System. ComponentModel.DataAnnotations.ValidationResult。 使用System. ComponentModel.DataAnnotations.ValidationResult.Success代表成功。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyOccursMoreThanOnce" xml:space="preserve">
    <value>位置{0}處具有值“{1}”的鍵參數出現多次。</value>
  </data>
  <data name="UIHintImplementation_NeedEvenNumberOfControlParameters" xml:space="preserve">
    <value>控制參數的數量必須為偶數。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Signature" xml:space="preserve">
    <value>類型“{1}”中的CustomValidationAttribute方法“{0}”必須與預期的簽名匹配： public static ValidationResult {0}(object value, ValidationContext context)。 該值可以是强類型的。 ValidationContext參數是可選的。</value>
  </data>
  <data name="MinLengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>MinLengthAttribute的長度值必須大於等於零。</value>
  </data>
  <data name="DataTypeAttribute_EmptyDataTypeString" xml:space="preserve">
    <value>自定義DataType字串不能為null或空。</value>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>必須設定ErrorMessageString或ErrorMessageResourceName，但不能同時設定。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNull" xml:space="preserve">
    <value>位置{0}處的關鍵參數為null。 每個鍵控制參數都必須是字串。</value>
  </data>
  <data name="DisplayAttribute_PropertyNotSet" xml:space="preserve">
    <value>尚未設定{0}内容。 使用{1}方法獲取值。</value>
  </data>
  <data name="ValidationAttribute_IsValid_NotImplemented" xml:space="preserve">
    <value>此類尚未實現IsValid(object value)。 首選入口點是GetValidationResult()，類應覆蓋IsValid(object value，ValidationContext context)。</value>
  </data>
</root>