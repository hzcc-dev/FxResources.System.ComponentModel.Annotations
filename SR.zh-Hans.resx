<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>找不到名为{0}的属性。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Conversion_Failed" xml:space="preserve">
    <value>无法按照方法{2}.{3}的预期将类型“{0}”的值转换为“{1}”。</value>
  </data>
  <data name="RangeAttribute_MinGreaterThanMax" xml:space="preserve">
    <value>最大值“{0}”必须大于或等于最小值“{1}”。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Must_Be_Public" xml:space="preserve">
    <value>自定义验证类型“{0}”必须是公共的。</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}必须在{1}到{2}之间。</value>
  </data>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>参数“{0}”不能为null、空或仅包含空格。</value>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>模式必须设置为有效的正则表达式。</value>
  </data>
  <data name="CreditCardAttribute_Invalid" xml:space="preserve">
    <value>{0}字段不是有效的信用卡号。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNotAString" xml:space="preserve">
    <value>位置{0}处值为“{1}”的键参数不是字符串。每个键控制参数都必须是字符串。</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}的长度不能超过{1}。</value>
  </data>
  <data name="LocalizableString_LocalizationFailed" xml:space="preserve">
    <value>无法检索属性“{0}”，因为本地化失败。类型“{1}”不是公共的，或者不包含名为“{2}”的公共静态字符串属性。</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>字段{0}的长度必须在{2}到{1}之间。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Required" xml:space="preserve">
    <value>CustomValidation.Method未指定。</value>
  </data>
  <data name="AttributeStore_Unknown_Property" xml:space="preserve">
    <value>类型“{0}”不包含名为“{1}”的公共属性。</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}必须是最大长度为“{1}”的字符串或数组类型。</value>
  </data>
  <data name="Validator_Property_Value_Wrong_Type" xml:space="preserve">
    <value>属性“{0}”的值必须为“{1}”类型。</value>
  </data>
  <data name="LengthAttribute_InvalidValueType" xml:space="preserve">
    <value>类型为{0}的字段必须是字符串、数组或ICollection类型。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Not_Found" xml:space="preserve">
    <value>CustomValidationAttribute方法“{0}”在类型“{1}”中不存在，或者不是公共和静态的。</value>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>{0}字段不是有效的电话号码。</value>
  </data>
  <data name="UrlAttribute_Invalid" xml:space="preserve">
    <value>{0}字段不是有效的完全限定的http、https、ftp URL。</value>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}无效。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>类型“{0}”需要表示枚举类型。</value>
  </data>
  <data name="RangeAttribute_ArbitraryTypeNotIComparable" xml:space="preserve">
    <value>类型{0}必须实现{1}。</value>
  </data>
  <data name="FileExtensionsAttribute_Invalid" xml:space="preserve">
    <value>{0}字段仅接受具有以下扩展名的文件：{1}</value>
  </data>
  <data name="ValidationAttribute_NeedBothResourceTypeAndResourceName" xml:space="preserve">
    <value>需要在此属性上设置ErrorMessageResourceType和ErrorMessageResourceName。</value>
  </data>
  <data name="Validator_InstanceMustMatchValidationContextInstance" xml:space="preserve">
    <value>提供的实例必须与提供的ValidationContext上的ObjectInstance匹配。</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}必须是最小长度为“{1}”的字符串或数组类型。</value>
  </data>
  <data name="MetadataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>MetadataClassType不能为null。</value>
  </data>
  <data name="CustomValidationAttribute_ValidatorType_Required" xml:space="preserve">
    <value>CustomValidation.ValidatorType未指定。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Min_And_Max" xml:space="preserve">
    <value>必须设置最小值和最大值。</value>
  </data>
  <data name="ValidationAttribute_ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>资源类型“{0}”没有名为“{1}”的可访问静态属性。</value>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute的长度值必须大于零。使用不带参数的MaxLength()来指示字符串或数组可以具有允许的最大长度。</value>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>找不到属性{0}.{1} 。</value>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0}无效。</value>
  </data>
  <data name="StringLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>最大长度必须是非负整数。</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>字段{0}必须与正则表达式“{1}”匹配。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>为EnumDataTypeAttribute提供的类型不能为null。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Operand_Type" xml:space="preserve">
    <value>当字符串用于最小值和最大值时，必须设置OperandType。</value>
  </data>
  <data name="ValidationAttribute_ResourcePropertyNotStringType" xml:space="preserve">
    <value>资源类型“{1}”的属性“{0}”不是字符串类型。</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>{0}字段为必填项。</value>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>“{0}”和“{1}”不匹配。</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>{0}字段不是有效的电子邮件地址。</value>
  </data>
  <data name="AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties" xml:space="preserve">
    <value>类型“{0}”的关联元数据类型包含以下未知属性或字段：{1}。请确保这些成员的名称与主类型上的属性名称匹配。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Must_Return_ValidationResult" xml:space="preserve">
    <value>类型“{1}”中的CustomValidationAttribute方法“{0}”必须返回System.ComponentModel.DataAnnotations.ValidationResult。使用System.ComponentModel.DataAnnotations.ValidationResult.Success代表成功。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyOccursMoreThanOnce" xml:space="preserve">
    <value>位置{0}处具有值“{1}”的键参数出现多次。</value>
  </data>
  <data name="UIHintImplementation_NeedEvenNumberOfControlParameters" xml:space="preserve">
    <value>控制参数的数量必须为偶数。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Signature" xml:space="preserve">
    <value>类型“{1}”中的CustomValidationAttribute方法“{0}”必须与预期的签名匹配：public static ValidationResult {0}(object value, ValidationContext context)。该值可以是强类型的。ValidationContext参数是可选的。</value>
  </data>
  <data name="MinLengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>MinLengthAttribute的长度值必须大于等于零。</value>
  </data>
  <data name="DataTypeAttribute_EmptyDataTypeString" xml:space="preserve">
    <value>自定义DataType字符串不能为null或空。</value>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>必须设置ErrorMessageString或ErrorMessageResourceName，但不能同时设置。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNull" xml:space="preserve">
    <value>位置{0}处的关键参数为null。每个键控制参数都必须是字符串。</value>
  </data>
  <data name="DisplayAttribute_PropertyNotSet" xml:space="preserve">
    <value>尚未设置{0}属性。使用{1}方法获取值。</value>
  </data>
  <data name="ValidationAttribute_IsValid_NotImplemented" xml:space="preserve">
    <value>此类尚未实现IsValid(object value)。首选入口点是GetValidationResult()，类应覆盖IsValid(object value, ValidationContext context)。</value>
  </data>
</root>